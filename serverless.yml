org: jitunayak
app: netflix-clone
service: netflix-clone
frameworkVersion: "2 || 3"

plugins:
  - serverless-plugin-typescript
custom:
  tableName: "movies-table-${sls:stage}"

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs12.x
  region: "ap-south-1"
  lambdaHashingVersion: "20201221"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [MoviesTable, Arn]
            - !Join [
                "/",
                [Fn::GetAtt: [MoviesTable, Arn], "index", "title-index"],
              ]

            # - arn:aws:dynamodb:us-east-1:967217736102:table/movies-table-dev/index/title-index

  environment:
    MOVIES_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: src/handler.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    MoviesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: movieId
            AttributeType: S
          - AttributeName: title
            AttributeType: S
          - AttributeName: genre
            AttributeType: S

        KeySchema:
          - AttributeName: movieId
            KeyType: HASH

        GlobalSecondaryIndexes:
          - IndexName: title-index
            KeySchema:
              - AttributeName: title
                KeyType: HASH
            Projection:
              ProjectionType: ALL

          - IndexName: genre-index
            KeySchema:
              - AttributeName: genre
                KeyType: HASH
            Projection:
              ProjectionType: ALL

        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
